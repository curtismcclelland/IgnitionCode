// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAgentPro.Data;

namespace WebAgentPro.Migrations
{
    [DbContext(typeof(WapDbContext))]
    [Migration("20220712201413_Fixed PrimaryDriver property in Vehicle model")]
    partial class FixedPrimaryDriverpropertyinVehiclemodel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebAgentPro.Api.Models.Discount", b =>
                {
                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("AntilockBrakes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AntitheftInstalled")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DaytimeRunningLights")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GarageAddressDifferent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HighDaysDrivenPerWeek")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowAnnualMileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowDrivingExperience")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowMilesDrivenToWork")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MultiCar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PassiveRestraints")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousCarrierLizard")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousCarrierPervasive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RecentClaims")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RecentMovingViolations")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReduceUse")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SafeDrivingSchool")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("YoungDriver")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("State");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("WebAgentPro.Api.Models.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverLicenseNumber")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("DriverLicenseState")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("QuoteId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuoteMultiplier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("SafeDrivingSchool")
                        .HasColumnType("bit");

                    b.HasKey("DriverId");

                    b.HasIndex("QuoteId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("WebAgentPro.Api.Models.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("AntilockBrakes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AntitheftInstalled")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("ClaimInLast5Years")
                        .HasColumnType("bit");

                    b.Property<string>("CreatorEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DaytimeRunningLights")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("ForceMultiCarDiscount")
                        .HasColumnType("bit");

                    b.Property<decimal>("GarageAddressDifferent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HighDaysDrivenPerWeek")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("LessThan3YearsDriving")
                        .HasColumnType("bit");

                    b.Property<decimal>("LowAnnualMileage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowDrivingExperience")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowMilesDrivenToWork")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("MovingVioliationInLast5Years")
                        .HasColumnType("bit");

                    b.Property<decimal>("MultiCar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PassiveRestraints")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PreviousCarrier")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("PreviousCarrierLizard")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousCarrierPervasive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("QuoteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("QuotePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RecentClaims")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RecentMovingViolations")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReduceUse")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoleID")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<decimal>("SafeDrivingSchool")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ssn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("TotalQuoteMultiplier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("YoungDriver")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("QuoteId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("WebAgentPro.Api.Models.Vehicle", b =>
                {
                    b.Property<int>("VehiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnnualMileage")
                        .HasColumnType("int");

                    b.Property<bool>("AntiTheft")
                        .HasColumnType("bit");

                    b.Property<bool>("AntilockBrakes")
                        .HasColumnType("bit");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DaysDrivenPerWeek")
                        .HasColumnType("int");

                    b.Property<bool>("DaytimeRunningLights")
                        .HasColumnType("bit");

                    b.Property<bool>("GarageAddressDifferentFromResidence")
                        .HasColumnType("bit");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("MilesDrivenToWork")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("PassiveRestraints")
                        .HasColumnType("bit");

                    b.Property<int?>("PrimaryDriverDriverId")
                        .HasColumnType("int");

                    b.Property<int?>("QuoteId")
                        .HasColumnType("int");

                    b.Property<decimal>("QuoteMultiplier")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ReducedUsedDiscount")
                        .HasColumnType("bit");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehiceId");

                    b.HasIndex("PrimaryDriverDriverId");

                    b.HasIndex("QuoteId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("WebAgentPro.Models.WapUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("BirthDayOfMonth")
                        .HasColumnType("int");

                    b.Property<int?>("BirthMonth")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebAgentPro.Models.WapUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebAgentPro.Models.WapUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAgentPro.Models.WapUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebAgentPro.Models.WapUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebAgentPro.Api.Models.Driver", b =>
                {
                    b.HasOne("WebAgentPro.Api.Models.Quote", null)
                        .WithMany("Drivers")
                        .HasForeignKey("QuoteId");
                });

            modelBuilder.Entity("WebAgentPro.Api.Models.Vehicle", b =>
                {
                    b.HasOne("WebAgentPro.Api.Models.Driver", "PrimaryDriver")
                        .WithMany()
                        .HasForeignKey("PrimaryDriverDriverId");

                    b.HasOne("WebAgentPro.Api.Models.Quote", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("QuoteId");

                    b.Navigation("PrimaryDriver");
                });

            modelBuilder.Entity("WebAgentPro.Api.Models.Quote", b =>
                {
                    b.Navigation("Drivers");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
